Immediate to-dos:
	- Make FindClosestToConfig faster!
	- replace with FLANN
		- currently iterates thru all neighbors linearly to find closest point

Next up:
	- figure out plotting issues on linux
	- animated visualization of path
	- Implement local connector with ordering - prototype separately first
	- Decide on final environment design
	- Clean up code!
		- add asserts for preconditions. 'assert condition, "message"'
		- move plots and animations into separate class?


Issues:
- Some nodes in PRM end up getting more neighbors because current code searches
thru nodes linearly for neighbors within a certain distance when connecting. This
could also be addressed with a proper nearest neighbors library, or randomization.


-----------------------------
Later
- plot original obstacles, overlayed with expanded
- Add some notion of a robot?
- Replace collision checking in environment with FCL?

- Make this a real library/module/package
	- Add support for different problems, define interfaces, provide examples and documentation

----------------------------
Notes
- We are assuming known map right now, constructed in SimpleEnvironment.InitMap()

Question for Oren: if local_connector with ordering is done for each edge, and
some edges require a certain order of movements to be collision-free, do we save
the orderings in the edge?
